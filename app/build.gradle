apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'

def shortHash = 'git log -1 --pretty=%h'.execute().text.trim().toUpperCase()
def commitCont = 'git rev-list HEAD --count'.execute().text.trim().toInteger()
def currentBranch = 'git symbolic-ref --short -q HEAD'.execute().text.trim()
//创建版本号===
//获取之前的版本列表
def tagList = "git describe --tags ${"git rev-list --tags".execute().text.trim()}".execute([], project.rootDir).text.trim().split("\n").toList()
//找到 a.b.c 纯数字版本tag
def lastVersion = tagList.find { tag -> tag.replace(".", "").isNumber() }.split("\\.")
//最后一位 数字 +1
lastVersion[lastVersion.length - 1] = lastVersion[lastVersion.length - 1].toInteger() + 1
def currentVersion = lastVersion.join(".")
android {
    signingConfigs {
        debug {
            storeFile file('../debug.jks')
            storePassword '123456'
            keyAlias = 'debug'
            keyPassword '123456'
        }
    }
    compileSdkVersion COMPILE_SDK_VERSION
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.sjianjun.reader"
        minSdkVersion MIN_SDK_VERSION
        targetSdkVersion TARGET_SDK_VERSION
        versionCode commitCont
        versionName "$currentVersion"

    }
    android.applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "${variant.applicationId}-${currentBranch}-${variant.buildType.name}(${variant.versionCode})-${variant.versionName}.apk"
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
//            applicationIdSuffix ".debug"
            signingConfig signingConfigs.debug
            manifestPlaceholders = [app_name: "学习"]
        }
        debug {
            minifyEnabled true
            shrinkResources true
            applicationIdSuffix ".debug"
            signingConfig signingConfigs.debug
            manifestPlaceholders = [app_name: "DEBUG"]
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.3-native-mt'

    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'

    def navigationVersion = "2.3.5"
    implementation "androidx.navigation:navigation-fragment-ktx:$navigationVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$navigationVersion"

//    kapt "androidx.lifecycle:lifecycle-compiler:2.2.0"
//    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
//    implementation "androidx.lifecycle:lifecycle-reactivestreams:2.2.0"

    implementation "androidx.room:room-runtime:2.3.0"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    kapt "androidx.room:room-compiler:2.3.0" // For Kotlin use kapt instead of annotationProcessor
    // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:2.3.0"

    implementation 'com.google.code.gson:gson:2.8.6'

    implementation "org.mozilla:rhino:1.7.12"
    implementation "org.jsoup:jsoup:1.13.1"

    implementation 'com.github.SJJ-dot:ALOG:1.2.9'
    implementation 'com.sjianjun:simple-http:0.0.4'
    implementation 'com.sjianjun:permission-request:1.1.5'
    implementation 'com.github.SJJ-dot:CoroutineKtx:0.0.3'
//    implementation 'com.sjianjun:reflects:0.0.1'

//    implementation "org.sufficientlysecure:html-textview:3.9"
    /**
     * 沉浸式
     */
    implementation 'com.github.SJJ-dot.ImmersionBar:immersionbar:3.1.0'

    implementation 'com.github.razerdp:BasePopup:2.2.9'
    //cookie
    implementation "com.github.franmontiel:PersistentCookieJar:v1.0.1"
    implementation "com.github.bumptech.glide:glide:4.11.0"
    kapt 'com.github.bumptech.glide:compiler:4.11.0'
    implementation "com.google.android:flexbox:1.0.0"
    implementation 'com.google.android.material:material:1.4.0'

    implementation 'com.tencent.bugly:crashreport_upgrade:1.4.5'
//    implementation "com.victor:lib:1.0.4"

//    implementation project(":refreshbar")
    implementation project(":fastscroller")

    implementation project(":pagerindicator")
    implementation 'com.github.SJJ-dot:AsyncView:1.1.5'

    //拦截非必要crash
//    implementation "com.github.SJJ-dot:Cockroach:2.0.1"
    //嵌套滚动 可容纳多个view滚动
    implementation 'com.github.donkingliang:ConsecutiveScroller:4.0.0'
    implementation 'com.github.lygttpod:SuperTextView:2.4.2'
    implementation 'de.hdodenhof:circleimageview:3.1.0'

    implementation 'com.google.zxing:core:3.3.0'
    //泄露检测
//    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.4'
//    debugImplementation 'com.squareup.leakcanary:leakcanary-android-process:2.6'
    def splitties_version = '3.0.0-beta02'
    implementation("com.louiscad.splitties:splitties-views-dsl-appcompat:$splitties_version")
    implementation("com.louiscad.splitties:splitties-views-dsl-constraintlayout:$splitties_version")
    implementation("com.louiscad.splitties:splitties-views-dsl-coordinatorlayout:$splitties_version")
    implementation("com.louiscad.splitties:splitties-views-dsl-material:$splitties_version")
    implementation("com.louiscad.splitties:splitties-views-dsl-recyclerview:$splitties_version")

}

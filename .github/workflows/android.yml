name: Android CI

on:
  push:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Create local.properties
        run: |
          echo "sign.storePassword=${{ secrets.KEY_STORE_PASSWORD }}" >> local.properties
          echo "sign.keyAlias=${{ secrets.ALIAS }}" >> local.properties
          echo "sign.keyPassword=${{ secrets.KEY_PASSWORD }}" >> local.properties
          echo "python=$(which python)" >> local.properties

      - name: Build and sign APK
        run: |
          chmod +x gradlew 
          ./gradlew assembleRelease -Psigning.keyAlias=${{ secrets.ALIAS }} -Psigning.keyPassword=${{ secrets.KEY_PASSWORD }} -Psigning.storeFile=./reader.jks -Psigning.storePassword=${{ secrets.KEY_STORE_PASSWORD }}
          ls app/build/outputs/apk/release/

      - name: Get APK name
        run: |
          apk_name=$(ls app/build/outputs/apk/release | tail -n 1)
          echo "APK_NAME=$apk_name" >> $GITHUB_ENV

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUBTOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Set tag name
        run: |
          tag_name=${{ github.ref }}
          tag_name=${tag_name#refs/heads/} # Remove 'refs/heads/' prefix
          echo "TAG_NAME=$tag_name" >> $GITHUB_ENV

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUBTOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./app/build/outputs/apk/release/*.apk
          asset_name: ${{ env.APK_NAME }}
          asset_content_type: application/vnd.android.package-archive
